############################################################################################################
#	AC mod - scripted gui
############################################################################################################

scripted_gui = {

	AC_allied_construction_window = {

		context_type = selected_state_context

		window_name = "AC_allied_construction_window"

		parent_window_token = selected_state_view

		# dirty = ROOT.AC_refresh_gui # build button isnt refreshing after starting a project for some reason

		visible = {

			THIS = { free_building_slots = { building = infrastructure size < 10 include_locked = no } } # not impassable state

			CONTROLLER = {
				ROOT = { is_in_array = { array = AC_construction_permissions value = PREV.id } }
				NOT = { has_war_with = ROOT }
			}
		}

		properties = {

			AC_building_infra_button = {
				image = "[AC_GetInfraButtonTexture]"
			}
			
			AC_building_airbase_button = {
				image = "[AC_GetAirbaseButtonTexture]"
			}
			
			AC_building_antiair_button = {
				image = "[AC_GetAntiairButtonTexture]"
			}
			
			AC_building_radar_button = {
				image = "[AC_GetRadarButtonTexture]"
			}

			AC_building_mic_button = {
				image = "[AC_GetMicButtonTexture]"
			}
			
			AC_building_cic_button = {
				image = "[AC_GetCicButtonTexture]"
			}
			
			AC_building_nic_button = {
				image = "[AC_GetNicButtonTexture]"
			}
			
			AC_building_ref_button = {
				image = "[AC_GetRefButtonTexture]"
			}
		}

		effects = {

			AC_build_button_click = {

				if = { limit = { NOT = { is_in_array = { array = THIS.AC_projects_in_state value = ROOT.id } } }

					AC_start_project = yes
				}
				else = {

					ROOT = {
						set_variable = { AC_project = PREV.AC_project_target_state_@ROOT }
						AC_end_project = yes 
					}
				}

				AC_refresh_gui = yes
			}
			
			###

			AC_assist_repair_button_click = {

				AC_start_assist_repair = yes

				AC_refresh_gui = yes
			}

			AC_assist_repair_cancel_button_click = {

				AC_end_assist_repair = yes

				AC_refresh_gui = yes
			}

			###

			AC_assigned_factories_increase_button_click = {

				ROOT = {
					add_to_variable = { AC_project_assigned_factories^-1 = 1 }
					clamp_variable = { var = AC_project_assigned_factories^-1 min = 1 max = 15 }
					if = { limit = { check_variable = { AC_project_assigned_factories^-1 > num_of_civilian_factories_available_for_projects } } # clamp throws errors
						set_variable = { AC_project_assigned_factories^-1 = num_of_civilian_factories_available_for_projects }
					}

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_assigned_factories_increase_button_shift_click = {

				ROOT = {
					add_to_variable = { AC_project_assigned_factories^-1 = 5 }
					clamp_variable = { var = AC_project_assigned_factories^-1 min = 1 max = 15 }
					if = { limit = { check_variable = { AC_project_assigned_factories^-1 > num_of_civilian_factories_available_for_projects } }
						set_variable = { AC_project_assigned_factories^-1 = num_of_civilian_factories_available_for_projects }
					}

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_assigned_factories_decrease_button_click = {

				ROOT = {
					subtract_from_variable = { AC_project_assigned_factories^-1 = 1 }
					clamp_variable = { var = AC_project_assigned_factories^-1 min = 1 max = 15 }
					if = { limit = { check_variable = { AC_project_assigned_factories^-1 > num_of_civilian_factories_available_for_projects } }
						set_variable = { AC_project_assigned_factories^-1 = num_of_civilian_factories_available_for_projects }
					}

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_assigned_factories_decrease_button_shift_click = {

				ROOT = {
					subtract_from_variable = { AC_project_assigned_factories^-1 = 5 }
					clamp_variable = { var = AC_project_assigned_factories^-1 min = 1 max = 15 }
					if = { limit = { check_variable = { AC_project_assigned_factories^-1 > num_of_civilian_factories_available_for_projects } }
						set_variable = { AC_project_assigned_factories^-1 = num_of_civilian_factories_available_for_projects }
					}

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			###

			AC_building_amount_increase_button_click = {

				ROOT = {
					### max amount depends on the selected building
				
					if = { limit = { check_variable = { AC_project_building_type^-1 = 3 } }

						add_to_variable = { AC_project_build_amount^-1 = 1 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 5 }
					}
					else_if = { limit = { check_variable = { AC_project_building_type^-1 = 4 } }

						add_to_variable = { AC_project_build_amount^-1 = 1 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 6 }
					}
					else_if = { limit = { check_variable = { AC_project_building_type^-1 = 8 } }

						add_to_variable = { AC_project_build_amount^-1 = 1 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 3 }
					}
					else = {

						add_to_variable = { AC_project_build_amount^-1 = 1 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 10 }
					}
					
					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_building_amount_increase_button_shift_click = {

				ROOT = {
					### max amount depends on the selected building
				
					if = { limit = { check_variable = { AC_project_building_type^-1 = 3 } }

						add_to_variable = { AC_project_build_amount^-1 = 5 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 5 }
					}
					else_if = { limit = { check_variable = { AC_project_building_type^-1 = 4 } }

						add_to_variable = { AC_project_build_amount^-1 = 5 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 6 }
					}
					else_if = { limit = { check_variable = { AC_project_building_type^-1 = 8 } }

						add_to_variable = { AC_project_build_amount^-1 = 5 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 3 }
					}
					else = {

						add_to_variable = { AC_project_build_amount^-1 = 5 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 10 }
					}

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_building_amount_decrease_button_click = {

				ROOT = {
					### max amount depends on the selected building
				
					if = { limit = { check_variable = { AC_project_building_type^-1 = 3 } }

						subtract_from_variable = { AC_project_build_amount^-1 = 1 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 5 }
					}
					else_if = { limit = { check_variable = { AC_project_building_type^-1 = 4 } }

						subtract_from_variable = { AC_project_build_amount^-1 = 1 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 6 }
					}
					else_if = { limit = { check_variable = { AC_project_building_type^-1 = 8 } }

						subtract_from_variable = { AC_project_build_amount^-1 = 1 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 3 }
					}
					else = {

						subtract_from_variable = { AC_project_build_amount^-1 = 1 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 10 }
					}
					
					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_building_amount_decrease_button_shift_click = {

				ROOT = {
					### max amount depends on the selected building
				
					if = { limit = { check_variable = { AC_project_building_type^-1 = 3 } }

						subtract_from_variable = { AC_project_build_amount^-1 = 5 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 5 }
					}
					else_if = { limit = { check_variable = { AC_project_building_type^-1 = 4 } }

						subtract_from_variable = { AC_project_build_amount^-1 = 5 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 6 }
					}
					else_if = { limit = { check_variable = { AC_project_building_type^-1 = 8 } }

						subtract_from_variable = { AC_project_build_amount^-1 = 5 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 3 }
					}
					else = {

						subtract_from_variable = { AC_project_build_amount^-1 = 5 }
						clamp_variable = { var = AC_project_build_amount^-1 min = 1 max = 10 }
					}
					
					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			######### STATE BUILDINGS

			AC_building_infra_button_click = {

				ROOT = {
					set_variable = { AC_project_building_type^-1 = 1 }

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_building_airbase_button_click = {

				ROOT = {
					set_variable = { AC_project_building_type^-1 = 2 }

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_building_antiair_button_click = {

				ROOT = {
					set_variable = { AC_project_building_type^-1 = 3 }

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_building_radar_button_click = {

				ROOT = {
					set_variable = { AC_project_building_type^-1 = 4 }

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			######### SHARED BUILDINGS

			AC_building_mic_button_click = {

				ROOT = {
					set_variable = { AC_project_building_type^-1 = 5 }

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_building_cic_button_click = {

				ROOT = {
					set_variable = { AC_project_building_type^-1 = 6 }

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_building_nic_button_click = {

				ROOT = {
					set_variable = { AC_project_building_type^-1 = 7 }

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}

			AC_building_ref_button_click = {

				ROOT = {
					set_variable = { AC_project_building_type^-1 = 8 }

					AC_update_gui = yes
				}

				AC_refresh_gui = yes
			}
		}

		triggers = {

			AC_build_button_click_enabled = {

				if = { limit = { NOT = { is_in_array = { array = THIS.AC_projects_in_state value = ROOT.id } } }

					ROOT = {

						meta_trigger = {
							text = { check_variable = { ROOT.AC_active_projects < [x] } }
							x = "[AC_GetMaxProjects]"
						}

						check_variable = { AC_project_building_type^-1 > 0 }
						check_variable = { AC_project_build_amount^-1 > 0 }
						check_variable = { AC_project_assigned_factories^-1 > 0 }

						NOT = { check_variable = { num_of_civilian_factories_available_for_projects < AC_project_assigned_factories^-1 } }
						NOT = { check_variable = { political_power < AC_project_political_power_cost^-1 } }

						######### STATE BUILDINGS

						if = { limit = { check_variable = { AC_project_building_type^-1 = 1 } }

							PREV = { AC_building_infra_available = yes }
						}

						if = { limit = { check_variable = { AC_project_building_type^-1 = 2 } }

							PREV = { AC_building_airbase_available = yes }
						}

						if = { limit = { check_variable = { AC_project_building_type^-1 = 3 } }

							PREV = { AC_building_antiair_available = yes }
						}

						if = { limit = { check_variable = { AC_project_building_type^-1 = 4 } }

							PREV = { AC_building_radar_available = yes }
						}

						######### SHARED BUILDINGS

						if = { limit = { check_variable = { AC_project_building_type^-1 = 5 } }

							PREV = { AC_building_mic_available = yes }
						}

						if = { limit = { check_variable = { AC_project_building_type^-1 = 6 } }

							PREV = { AC_building_cic_available = yes }
						}

						if = { limit = { check_variable = { AC_project_building_type^-1 = 7 } }

							PREV = { AC_building_nic_available = yes }
						}

						if = { limit = { check_variable = { AC_project_building_type^-1 = 8 } }

							PREV = { AC_building_ref_available = yes }
						}
					}
				}
			}

			### projects

			AC_building_radar_button_click_enabled = {

				ROOT = { has_tech = radio_detection }
			}

			AC_building_nic_button_click_enabled = {

				THIS = { is_coastal = yes }
			}

			AC_building_ref_button_click_enabled = {

				ROOT = { has_tech = synth_oil_experiments }
			}

			### repair

			AC_assist_repair_button_click_enabled = {

				ROOT = { NOT = { has_country_flag = AC_assist_repair_cancelled } }

				CONTROLLER = { NOT = { has_variable = AC_assist_repair_target_from } }
			}

			AC_assist_repair_button_visible = {
				
				ROOT = { NOT = { has_variable = AC_assist_repair_target } }
			}

			AC_assist_repair_cancel_button_visible = {
				
				ROOT = { has_variable = AC_assist_repair_target }
			}
		}
	}
}