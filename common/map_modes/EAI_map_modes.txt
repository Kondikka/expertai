scripted_map_modes = {

    # debug_map_mode_airbase = {

    #     top = {

    #         type = state

    #         color = {

    #             set_temp_variable = { red = 0.0 }
    #             set_temp_variable = { blue = 0.0 }
    #             set_temp_variable = { green = 0.0 }
    #             set_temp_variable = { alpha = 1.0 }

    #             if = { limit = { check_variable = { FROM.EAI_debug_value > 500 } }

    #                 set_temp_variable = { red = 1.0 }
    #                 set_temp_variable = { blue = 0.0 }
    #                 set_temp_variable = { green = 1.0 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }

    #             if = { limit = { check_variable = { FROM.EAI_debug_value > 0 } }

    #                 set_temp_variable = { red = 0.0 }
    #                 set_temp_variable = { blue = 0.0 }
    #                 set_temp_variable = { green = 1.0 }
    #                 set_temp_variable = { alpha = 1.0 }

    #                 set_temp_variable = { tmp_color = FROM.EAI_debug_value }
    #                 divide_temp_variable = { tmp_color = 500 }
    #                 clamp_temp_variable = { var = tmp_color min = 0.0 max = 1.0 }

    #                 set_temp_variable = { tmp_color_range = 0.5 }
    #                 multiply_temp_variable = { tmp_color_range = tmp_color }
    #                 set_temp_variable = { tmp_color = 1 }
    #                 subtract_from_temp_variable = { tmp_color = 0.5 }
    #                 add_to_temp_variable = { tmp_color = tmp_color_range }

    #                 set_temp_variable = { green = tmp_color }
    #             }

    #             if = { limit = { check_variable = { FROM.EAI_debug_value < 0 } }

    #                 set_temp_variable = { red = 1.0 }
    #                 set_temp_variable = { blue = 1.0 }
    #                 set_temp_variable = { green = 0.0 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }
    #         }

    #         thickness = no

    #         targets = {

    #             target_array = global.states

    #             target_trigger = {
	# 				FROM = {
    #                     is_controlled_by = ROOT
	# 				}
	# 			}
    #         }
    #     }

    #     bottom = {
			
    #         type = state

    #         color = {

    #             set_temp_variable = { red = 0.0 }
    #             set_temp_variable = { blue = 0.0 }
    #             set_temp_variable = { green = 0.0 }
    #             set_temp_variable = { alpha = 1.0 }

    #             if = { limit = { FROM = { is_controlled_by = ROOT } }

    #                 # if = { limit = { FROM = { any_neighbor_state = { CONTROLLER = { has_war_with = ROOT } } } }

    #                 #     set_temp_variable = { red = 1.0 }
    #                 #     set_temp_variable = { blue = 0.0 }
    #                 #     set_temp_variable = { green = 0.5 }
    #                 #     set_temp_variable = { alpha = 1.0 }
    #                 # }
    #                 # else = {

    #                     set_temp_variable = { red = 0.0 }
    #                     set_temp_variable = { blue = 0.25 }
    #                     set_temp_variable = { green = 0.0 }
    #                     set_temp_variable = { alpha = 1.0 }
    #                 # }
    #             }

    #             else_if = { limit = { FROM = { CONTROLLER = { has_war_with = ROOT } } }

    #                 set_temp_variable = { red = 0.5 }
    #                 set_temp_variable = { blue = 0.0 }
    #                 set_temp_variable = { green = 0.0 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }

    #             else = {

    #                 set_temp_variable = { red = 0.25 }
    #                 set_temp_variable = { blue = 0.25 }
    #                 set_temp_variable = { green = 0.25 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }
    #         }

    #         targets = {

    #             target_array = global.states

    #             target_trigger = {
	# 				FROM = {
	# 					always = yes
	# 				}
	# 			}
    #         }
	# 	}

    #     far_text = state

    #     near_text = state

    #     update_daily = yes
    # }

    # debug_map_mode_priority_construction = {

    #     top = {

    #         type = state

    #         color = {

    #             if = { 
    #                 limit = { 
    #                     FROM = {
    #                         any_of = { array = EAI_PC_projects_in_state_of_@ROOT
    #                             check_variable = { ROOT.EAI_PC_assigned_factories^v > 0 }
    #                         }
    #                     }
    #                 }

    #                 set_temp_variable = { red = 1.0 }
    #                 set_temp_variable = { blue = 0.0 }
    #                 set_temp_variable = { green = 0.0 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }
    #             else = {

    #                 set_temp_variable = { red = 0.0 }
    #                 set_temp_variable = { blue = 0.0 }
    #                 set_temp_variable = { green = 1.0 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }
    #         }

    #         targets = {

    #             # target_array = ROOT.EAI_PC_target_state
    #             target_array = controlled_states

    #             target_trigger = {
    #                 # FROM = {
    #                 #     any_of = { array = EAI_PC_projects_in_state_of_@ROOT
    #                 #         check_variable = { ROOT.EAI_PC_assigned_factories^v > 0 }
    #                 #     }
    #                 # }
    #                 FROM = {
    #                     check_variable = { EAI_PC_projects_in_state_of_@ROOT^num > 0 }
    #                 }
	# 			}
    #         }
    #     }

    #     bottom = {
			
    #         type = state

    #         color = {

    #             if = { limit = { FROM = { is_controlled_by = ROOT } }

    #                 set_temp_variable = { red = 0.0 }
    #                 set_temp_variable = { blue = 0.25 }
    #                 set_temp_variable = { green = 0.0 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }

    #             if = { limit = { FROM = { NOT = { is_controlled_by = ROOT } } }

    #                 set_temp_variable = { red = 0.5 }
    #                 set_temp_variable = { blue = 0.5 }
    #                 set_temp_variable = { green = 0.5 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }
    #         }

    #         targets = {

    #             target_array = global.states

    #             target_trigger = {
	# 				FROM = {
    #                     always = yes
	# 				}
	# 			}
    #         }
	# 	}

    #     update_daily = yes
    # }

    # debug_map_mode_strategic_bombing = {

    #     top = {

    #         type = state

    #         color = {

    #             set_temp_variable = { red = 0.0 }
    #             set_temp_variable = { blue = 0.0 }
    #             set_temp_variable = { green = 0.0 }
    #             set_temp_variable = { alpha = 1.0 }

    #             if = { limit = { check_variable = { ROOT.EAI_PC_AA_strategic_bombing_activity_region_value^FROM.EAI_region_id > 0 } }

    #                 set_temp_variable = { red = 0.0 }
    #                 set_temp_variable = { blue = 0.0 }
    #                 set_temp_variable = { green = 0.0 }
    #                 set_temp_variable = { alpha = 1.0 }

    #                 set_temp_variable = { tmp_color = ROOT.EAI_PC_AA_strategic_bombing_activity_region_value^FROM.EAI_region_id }
    #                 divide_temp_variable = { tmp_color = 50 }
    #                 clamp_temp_variable = { var = tmp_color min = 0.0 max = 1.0 }

    #                 set_temp_variable = { tmp_color_range = 0.5 }
    #                 multiply_temp_variable = { tmp_color_range = tmp_color }
    #                 set_temp_variable = { tmp_color = 1 }
    #                 subtract_from_temp_variable = { tmp_color = 0.5 }
    #                 add_to_temp_variable = { tmp_color = tmp_color_range }

    #                 set_temp_variable = { red = tmp_color }
    #                 set_temp_variable = { green = tmp_color }
    #             }
    #         }

    #         thickness = no

    #         targets = {

    #             target_array = global.states

    #             target_trigger = {
	# 				FROM = {
    #                     is_controlled_by = ROOT
	# 				}
	# 			}
    #         }
    #     }

    #     bottom = {
			
    #         type = state

    #         color = {

    #             set_temp_variable = { red = 0.0 }
    #             set_temp_variable = { blue = 0.0 }
    #             set_temp_variable = { green = 0.0 }
    #             set_temp_variable = { alpha = 0.0 }

    #             if = { limit = { FROM = { is_controlled_by = ROOT } }


    #                 set_temp_variable = { red = 0.2 }
    #                 set_temp_variable = { blue = 0.65 }
    #                 set_temp_variable = { green = 0.2 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }

    #             else_if = { limit = { FROM = { CONTROLLER = { has_war_with = ROOT } } }

    #                 set_temp_variable = { red = 0.35 }
    #                 set_temp_variable = { blue = 0.0 }
    #                 set_temp_variable = { green = 0.0 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }

    #             else = {

    #                 set_temp_variable = { red = 0.25 }
    #                 set_temp_variable = { blue = 0.25 }
    #                 set_temp_variable = { green = 0.25 }
    #                 set_temp_variable = { alpha = 1.0 }
    #             }
    #         }

    #         targets = {

    #             target_array = global.states

    #             target_trigger = {
	# 				FROM = {
    #                     if = { limit = {is_controlled_by = ROOT }
                        
    #                         NOT = { check_variable = { ROOT.EAI_PC_AA_strategic_bombing_activity_region_value^FROM.EAI_region_id > 0 } }
    #                     }
	# 				}
	# 			}
    #         }
	# 	}

    #     update_daily = yes
    # }
}