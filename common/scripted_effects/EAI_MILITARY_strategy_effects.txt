############################################################################################################
#	Expert AI mod 
############################################################################################################

EAI_MILITARY_daily_update = {

	EAI_MILITARY_operational_pause_timer = yes

	EAI_MILITARY_train_navy = yes

	EAI_MILITARY_NAVAL_save_navy = yes

	# USSR - declare war on Finland on the exact historical date
	if = {
		limit = {
			tag = SOV
			has_country_flag = EAI_SOV_take_finland
			date > 1939.11.30
			has_wargoal_against = FIN
			NOT = { has_war_with = FIN }
			FIN = {
				NOT = {
					is_in_faction = yes
					is_subject = yes
				}
			}
		}

		declare_war_on = {
			target = FIN
			type = take_claimed_state
		}
	}
}

EAI_MILITARY_weekly_update = {

	EAI_MILITARY_special_military_strategies = yes

	# EAI_MILITARY_track_war_trend = yes # Track globally

	### Eastern front script

	if = {
		limit = {
			tag = GER
			NOT = { has_completed_focus = GER_ussr_war_goal }
			focus_progress = { focus = GER_ussr_war_goal progress > 0.1 }
			NOT = { SOV = { has_country_flag = EAI_SOV_eastern_garrison } }
		}

		SOV = { set_country_flag = { flag = EAI_SOV_eastern_garrison days = 300 value = 1 } }
	}

	### Japanese home island defense

	if = {
		limit = {
			tag = JAP
			has_war = yes
		}

		set_variable = { EAI_japanese_home_states_controlled_by_enemy = 0 }
		for_each_scope_loop = { array = global.EAI_japanese_home_states

			if = { 
				limit = {
					OR = {
						CONTROLLER = { has_war_with = ROOT }

						AND = {
							is_in_home_area = yes
							ROOT = { 
								controls_state = PREV
								NOT = { has_full_control_of_state = PREV } 
							}
						}
					}
				}

				add_to_variable = { PREV.EAI_japanese_home_states_controlled_by_enemy = 1 }
			}
		}


		# % of states controlled
		divide_variable = { EAI_japanese_home_states_controlled_by_enemy = global.EAI_japanese_home_states^num }

		if = { limit = { check_variable = { EAI_japanese_home_states_controlled_by_enemy > 0 } }
		
			set_country_flag = { flag = EAI_japanese_home_states_controlled_by_enemy value = 1 days = 90 }
		}
	}
}

EAI_MILITARY_bimonthly_update = {

	EAI_MILITARY_defensive_front_strategy = yes

	EAI_MILITARY_track_submarine_losses = yes

	### North Africa front - push towards a historical outcome

	if = {
		limit = {
			OR = { tag = ITA tag = ENG }
			has_war = yes
		}

		set_variable = { EAI_NA_states_controlled = 0 }

		for_each_scope_loop = { array = global.EAI_north_african_states

			if = { limit = { is_controlled_by = ROOT }

				add_to_variable = { ROOT.EAI_NA_states_controlled = 1 }
			}
		}

		# % of states controlled
		divide_variable = { EAI_NA_states_controlled = global.EAI_north_african_states^num }

		set_temp_variable = { years_from_end = 1944 } # Target year for the end
		subtract_from_temp_variable = { years_from_end = global.year }
		set_temp_variable = { max_years_from_end = 4 } # Expected length of the war
		clamp_temp_variable = { var = years_from_end min = 0 max = max_years_from_end }

		# Progress % towards end 0-100%
		divide_temp_variable = { years_from_end = max_years_from_end }
		set_variable = { EAI_NA_fraction_allowed_to_control = 1 }
		subtract_from_variable = { EAI_NA_fraction_allowed_to_control = years_from_end }

		multiply_variable = { EAI_NA_fraction_allowed_to_control = 0.5 } # 100% - base
		add_to_variable = { EAI_NA_fraction_allowed_to_control = 0.5 } # Base % allowed
	}

	### Spanish civil war - push towards a historical outcome

	if = {
		limit = {
			SPA = { has_civil_war = yes }
			NOT = { has_global_flag = EAI_SCW_surrender_progress_allowed_updated }
		}

		set_global_flag = { flag = EAI_SCW_surrender_progress_allowed_updated value = 1 days = 2 }
		
		set_temp_variable = { months_from_end = 40 } # Target month for the end
		subtract_from_temp_variable = { months_from_end = global.EAI_months_elapsed }
		set_temp_variable = { max_months_from_end = 10 } # Expected length of the war or when to start progress
		clamp_temp_variable = { var = months_from_end min = 0 max = max_months_from_end }

		# Progress % towards end 0-100%
		divide_temp_variable = { months_from_end = max_months_from_end }
		set_variable = { global.EAI_SCW_surrender_progress_allowed = 1 }
		subtract_from_variable = { global.EAI_SCW_surrender_progress_allowed = months_from_end }

		multiply_variable = { global.EAI_SCW_surrender_progress_allowed = 1.0 } # 100% - base
		add_to_variable = { global.EAI_SCW_surrender_progress_allowed = 0.0 } # Base % allowed
	}

	if = {
		limit = {
			is_historical_focus_on = yes

			SPR = { has_civil_war = yes }

			SPA = { is_ai = yes }
			SPB = { is_ai = yes }
			SPC = { is_ai = yes }
			SPD = { is_ai = yes }

			OR = {
				AND = { tag = SPA set_temp_variable = { temp_id = SPD.id } }
				AND = { tag = SPD set_temp_variable = { temp_id = SPA.id } }
			}

			var:temp_id = { surrender_progress > var:global.EAI_SCW_surrender_progress_allowed }
		}

		set_country_flag = EAI_SCW_limiter
	}
	else = { clr_country_flag = EAI_SCW_limiter }

	### Japan's push into China

	if = { limit = { tag = JAP }

		if = { 
			limit = { 
				has_war_with = CHI
				NOT = {
					any_enemy_country = {
						NOT = { tag = CHI }
						is_major = yes
					}
				}
			}

			for_each_scope_loop = { array = global.EAI_chinese_states

				if = { limit = { CONTROLLER = { OR = { tag = JAP has_war_together_with = JAP } } }

					add_to_temp_variable = { chinese_states_held = 1 }
				}
			}

			divide_temp_variable = { chinese_states_held = global.EAI_chinese_states^num }
			if = { limit = { check_variable = { chinese_states_held > 0.25 } }
				set_country_flag = EAI_JAP_offensive_vs_CHI_inland
			}
			else = {
				clr_country_flag = EAI_JAP_offensive_vs_CHI_inland
			}
		}
		else = {

			clr_country_flag = EAI_JAP_offensive_vs_CHI_inland
		}
	}
}

EAI_MILITARY_monthly_update = {

	EAI_MILITARY_track_fighter_losses = yes

	EAI_MILITARY_save_airforce_strategy = yes

	EAI_MILITARY_garrison_state_strategies = yes
}

### War trend

EAI_MILITARY_track_state_control_time = {

	every_state = {

		if = {
			limit = {
				OR = {
					check_variable = { EAI_MILITARY_state_controller = 0 }
					NOT = { check_variable = { EAI_MILITARY_state_controller = controller } }
				}
			}

			set_variable = { EAI_MILITARY_state_controller = controller }
		
			clr_state_flag = EAI_MILITARY_track_state_control_timer
			set_state_flag = EAI_MILITARY_track_state_control_timer
		}
	}
}

EAI_MILITARY_track_province_control_time = {

	every_state = {

		set_temp_variable = { tmp_controller = controller }

		if = { 
			limit = { 
				CONTROLLER = { has_war = yes } 

				OR = {
					CONTROLLER = { NOT = { has_full_control_of_state = PREV } }
					any_neighbor_state = {
						OR = {
							CONTROLLER = { has_war_with = var:tmp_controller }
							var:tmp_controller = { 
								controls_state = PREV
								NOT = { has_full_control_of_state = PREV } 
							}
						}
					}
				}
			}

			set_state_flag = EAI_MILITARY_track_province_control_time_flag

			for_each_loop = { array = global.EAI_state_province_ids@THIS index = control_i value = control_v

				# set_temp_variable = { _get_province_id_neighbors = control_v }
				# EAI_get_province_neighbors = yes

				if = {
					limit = {
						OR = {
							check_variable = { global.EAI_province_controller^control_v = 0 }
							NOT = { var:global.EAI_province_controller^control_v = { controls_province = control_v } }
							# NOT = {
							# 	any_of = { array = province_neighbors_ value = neighbor_id
								
							# 		var:global.province_controllers^neighbor_id = { has_war_with = var:global.EAI_province_controller^control_v }
							# 	}
							# }
						}
					}
				
					set_variable = { global.EAI_province_controller^control_v = global.province_controllers^control_v }
					set_variable = { global.EAI_province_control_days^control_v = 0 }
				}
				else = {
				
					add_to_variable = { global.EAI_province_control_days^control_v = 1 }
				}
			}
		}
		else_if = { limit = { has_state_flag = EAI_MILITARY_track_province_control_time_flag }

			clr_state_flag = EAI_MILITARY_track_province_control_time_flag

			for_each_loop = { array = global.EAI_state_province_ids@THIS index = control_i value = control_v

				set_variable = { global.EAI_province_controller^control_v = global.province_controllers^control_v }
				set_variable = { global.EAI_province_control_days^control_v = 0 }
			}
		}
	}
}

EAI_MILITARY_track_war_trend = {

	if = { limit = { has_war = yes }
	
		### Weekly update

		set_temp_variable = { total_controlled_provinces = 0 }
	
		clear_temp_array = check_states
		for_each_scope_loop = { array = controlled_states

			if = { limit = { NOT = { is_in_array = { check_states = THIS.id } } } add_to_temp_array = { check_states = THIS.id } }

			every_neighbor_state = { limit = { NOT = { is_in_array = { check_states = THIS.id } } }

				if = { limit = { NOT = { is_in_array = { check_states = THIS.id } } } add_to_temp_array = { check_states = THIS.id } }
			}
		}

		for_each_scope_loop = { array = check_states
		
			for_each_loop = { array = global.EAI_state_province_ids@THIS
			
				if = { limit = { PREV = { controls_province = v } }
				
					add_to_temp_variable = { total_controlled_provinces = 1 }
				}
			}
		}

		# Discard peaceful exchanges from war trend calculations
		add_to_temp_variable = { total_controlled_provinces = EAI_MILITARY_trend_adjust_num_provinces }

		###

		add_to_array = { array = EAI_MILITARY_num_controlled_provinces_weekly index = 0 value = total_controlled_provinces }

		if = { limit = { check_variable = { EAI_MILITARY_num_controlled_provinces_weekly^num > 3 } }
		
			### Avg of last 18 weeks
		
			set_temp_variable = { tmp_avg_of_num_target = 18 }
			clamp_temp_variable = { var = tmp_avg_of_num_target min = 0 max = EAI_MILITARY_num_controlled_provinces_weekly^num }
		
			set_temp_variable = { tmp_avg_of_val = 0 }
			set_temp_variable = { tmp_avg_of_div = 0 }
			for_each_loop = { array = EAI_MILITARY_num_controlled_provinces_weekly
			
				if = { limit = { check_variable = { i < tmp_avg_of_num_target } }
				
					add_to_temp_variable = { tmp_avg_of_val = v }
					add_to_temp_variable = { tmp_avg_of_div = 1 }
				}
				else = { set_temp_variable = { break = 1 } }
			}
			divide_temp_variable = { tmp_avg_of_val = tmp_avg_of_div }
			set_temp_variable = { tmp_avg_of_long = tmp_avg_of_val }
		
			### Avg of last 6 weeks
		
			set_temp_variable = { tmp_avg_of_num_target = tmp_avg_of_num_target }
			multiply_temp_variable = { tmp_avg_of_num_target = 0.33 }
			meta_effect = {
				text = {
					set_temp_variable = { tmp_avg_of_num_target = [x] }
				}
				x = "[?tmp_avg_of_num_target|0]"
			}
		
			set_temp_variable = { tmp_avg_of_val = 0 }
			set_temp_variable = { tmp_avg_of_div = 0 }
			for_each_loop = { array = EAI_MILITARY_num_controlled_provinces_weekly
			
				if = { limit = { check_variable = { i < tmp_avg_of_num_target } }
				
					add_to_temp_variable = { tmp_avg_of_val = v }
					add_to_temp_variable = { tmp_avg_of_div = 1 }
				}
				else = { set_temp_variable = { break = 1 } }
			}
			divide_temp_variable = { tmp_avg_of_val = tmp_avg_of_div }
			set_temp_variable = { tmp_avg_of_short = tmp_avg_of_val }
		
			### Trend

			set_temp_variable = { tmp_avg_diff = tmp_avg_of_long }
			subtract_from_temp_variable = { tmp_avg_diff = tmp_avg_of_short }
			
			set_temp_variable = { tmp_avg_min_diff_losing = total_controlled_provinces }
			multiply_temp_variable = { tmp_avg_min_diff_losing = 0.01 }
			clamp_temp_variable = { var = tmp_avg_min_diff_losing min = 1 max = 10 }

			set_temp_variable = { tmp_avg_min_diff_winning = total_controlled_provinces }
			multiply_temp_variable = { tmp_avg_min_diff_winning = 0.01 }
			clamp_temp_variable = { var = tmp_avg_min_diff_winning min = 1 max = 10 }
			multiply_temp_variable = { tmp_avg_min_diff_winning = -1 }

			# if = { limit = { tag = SOV } 
			
				# log = "provinces=[?total_controlled_provinces] avg_diff=[?tmp_avg_diff] avg_min_diff_losing=[?tmp_avg_min_diff_losing] avg_min_diff_winning=[?tmp_avg_min_diff_winning]" 
				# for_each_loop = { array = EAI_MILITARY_num_controlled_provinces_weekly
				
				# 	log = "i=[?i] v=[?v]"
				# }
			# }

			# if = { limit = { has_country_flag = EAI_war_trend_logging } log = "EAI_MILITARY_track_war_trend: short=[?tmp_avg_of_short] long=[?tmp_avg_of_long] diff=[?tmp_avg_diff] _min_diff_losing=[?tmp_avg_min_diff_losing] _min_diff_winning=[?tmp_avg_min_diff_winning]" }

			### Set trends
		
			# Losing
			if = { limit = { check_variable = { tmp_avg_diff > tmp_avg_min_diff_losing } }
			
				if = { limit = { NOT = { has_country_flag = EAI_MILITARY_trend_losing_war } }
				
					set_country_flag = EAI_MILITARY_trend_losing_war
				}

				set_variable = { EAI_MILITARY_trend_losing_war_value = tmp_avg_diff }

				set_variable = { EAI_MILITARY_trend_losing_war_percentage = EAI_MILITARY_trend_losing_war_value }
				divide_variable = { EAI_MILITARY_trend_losing_war_percentage = total_controlled_provinces }

				if = { limit = { has_country_flag = EAI_war_trend_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | EAI_MILITARY_track_war_trend: LOSING WAR = [?EAI_MILITARY_trend_losing_war_value] [?EAI_MILITARY_trend_losing_war_percentage]" }
			}
			else = { clr_country_flag = EAI_MILITARY_trend_losing_war }

			# Winning
			if = { limit = { check_variable = { tmp_avg_diff < tmp_avg_min_diff_winning } }
			
				if = { limit = { NOT = { has_country_flag = EAI_MILITARY_trend_winning_war } }
				
					set_country_flag = EAI_MILITARY_trend_winning_war
				}

				set_variable = { EAI_MILITARY_trend_winning_war_value = tmp_avg_diff }
				multiply_variable = { EAI_MILITARY_trend_winning_war_value = -1 }

				set_variable = { EAI_MILITARY_trend_losing_war_percentage = EAI_MILITARY_trend_winning_war_value }
				divide_variable = { EAI_MILITARY_trend_losing_war_percentage = total_controlled_provinces }

				if = { limit = { has_country_flag = EAI_war_trend_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | EAI_MILITARY_track_war_trend: WINNING WAR = [?EAI_MILITARY_trend_winning_war_value] [?EAI_MILITARY_trend_losing_war_percentage]" }
			}
			else = { clr_country_flag = EAI_MILITARY_trend_winning_war }

			# Stagnant
			if = { 
				limit = { 
					NOT = { check_variable = { tmp_avg_diff < tmp_avg_min_diff_winning } }
					NOT = { check_variable = { tmp_avg_diff > tmp_avg_min_diff_losing } }
				}
			
				# if = { limit = { has_country_flag = EAI_war_trend_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | EAI_MILITARY_track_war_trend: STAGNANT WAR" }

				if = { limit = { NOT = { has_country_flag = EAI_MILITARY_trend_stagnant_war } }
				
					set_country_flag = EAI_MILITARY_trend_stagnant_war
				}
			}
			else = { clr_country_flag = EAI_MILITARY_trend_stagnant_war }
		}
	}

	else = {
	
		EAI_MILITARY_track_war_trend_reset = yes
	}
}

EAI_MILITARY_track_war_trend_reset = {

	clear_array = EAI_MILITARY_num_controlled_provinces_weekly
	clear_variable = EAI_MILITARY_trend_adjust_num_provinces
	clr_country_flag = EAI_MILITARY_trend_stagnant_war
	clr_country_flag = EAI_MILITARY_trend_winning_war
	clr_country_flag = EAI_MILITARY_trend_losing_war
}

EAI_MILITARY_print_trend = {

	if = {
		limit = {
			has_country_flag = EAI_MILITARY_trend_stagnant_war
		}
	
		log = "EAI_MILITARY_trend_stagnant_war"
	}
	else_if = {
		limit = {
			has_country_flag = EAI_MILITARY_trend_winning_war
		}

		log = "EAI_MILITARY_trend_winning_war"
		log = "EAI_MILITARY_trend_winning_war_value=[?EAI_MILITARY_trend_losing_war_value]"
		log = "EAI_MILITARY_trend_winning_war_value=[?EAI_MILITARY_trend_losing_war_percentage]"
	}
	else_if = {
		limit = {
			has_country_flag = EAI_MILITARY_trend_losing_war
		}

		log = "EAI_MILITARY_trend_losing_war"
		log = "EAI_MILITARY_trend_losing_war_value=[?EAI_MILITARY_trend_losing_war_value]"
		log = "EAI_MILITARY_trend_losing_war_value=[?EAI_MILITARY_trend_losing_war_percentage]"
	}
}

###### Garrison

EAI_MILITARY_garrison_state_strategies = {

	if = {
		limit = {
			if = { limit = { has_war = yes }
				alliance_naval_strength_ratio < 3
			}
			else = { has_war = no }

			### exceptions

			# JAP needs troops vs CHi
			if = { limit = { tag = JAP }

				OR = {
					date > 1940.1.1
					alliance_naval_strength_ratio < 3
				}
			}
		}
		
		set_country_flag = EAI_MILITARY_garrison_state_strategies
	}
	else = { clr_country_flag = EAI_MILITARY_garrison_state_strategies }
}

###### Naval

EAI_MILITARY_NAVAL_save_navy = {

	set_temp_variable = { save_navy = 0 }

	### ITA

	# if = { limit = { tag = ITA }
	
	# 	if = {
	# 		limit = {
	# 			EAI_NAV_equipment_production = yes
	# 			has_deployed_air_force_size = { size < 400 type = naval_bomber }

	# 			num_of_military_factories > 25

	# 			alliance_naval_strength_ratio < 1.0

	# 			NOT = {
	# 				any_state = {
	# 					region = 23
	# 					OR = {
	# 						CONTROLLER = { has_war_with = ROOT }
	# 						ROOT = { 
	# 							controls_state = PREV
	# 							NOT = { has_full_control_of_state = PREV } 
	# 						}
	# 					}
	# 				}
	# 			}
	# 		}
		
	# 		set_temp_variable = { save_navy = 1 }
	# 	}
	# }

	###

	if = { limit = { check_variable = { save_navy = 1 } }
		
		if = { limit = { NOT = { has_country_flag = EAI_MILITARY_NAVAL_save_navy } }
	
			if = { limit = { has_country_flag = EAI_military_strategy_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | MILITARY: EAI_MILITARY_NAVAL_save_navy" }
			set_country_flag = EAI_MILITARY_NAVAL_save_navy
		}
	}
	else_if = { limit = { has_country_flag = EAI_MILITARY_NAVAL_save_navy }
	
		if = { limit = { has_country_flag = EAI_military_strategy_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | MILITARY: EAI_MILITARY_NAVAL_save_navy END" }
		clr_country_flag = EAI_MILITARY_NAVAL_save_navy
	}
}

EAI_MILITARY_track_submarine_losses = {

	subtract_from_variable = { EAI_previous_subs = num_ships_with_type@submarine }

	if = { limit = { check_variable = { EAI_previous_subs > 0 } }

		divide_variable = { EAI_previous_subs = num_ships_with_type@submarine }
		if = { limit = { check_variable = { EAI_previous_subs > 0.05 } } # lost more than 5%
			set_country_flag = { flag = EAI_halt_sub_missions value = 1 days = 14 }
		}
	}

	set_variable = { EAI_previous_subs = num_ships_with_type@submarine }
}

EAI_MILITARY_train_navy = { # simulate naval training for xp (AI doesn't exercise during war which causes serious issues for some like JAP later vs USA) - keep this for now

	@TRAINING_AVG_FUEL_CONSUMED_PER_SHIP = 32
	@TRAINING_AVG_XP_GAINED_PER_SHIP = 0.004

	if = {
		limit = {
			check_variable = { num_ships > 0 }

			has_navy_experience < 100

			fuel_ratio > 0.8

			has_war = yes

			enemies_naval_strength_ratio < 0.2 # enemy navies are very weak
			
			NOT = {
				any_enemy_country = {
					has_navy_size = { size > 10 }
				}
			}
		}

		set_temp_variable = { fuel_consumed = @TRAINING_AVG_FUEL_CONSUMED_PER_SHIP }
		multiply_temp_variable = { fuel_consumed = num_ships }
		multiply_temp_variable = { fuel_consumed = -1 }
		add_fuel = fuel_consumed

		set_temp_variable = { xp_gained = @TRAINING_AVG_XP_GAINED_PER_SHIP }
		multiply_temp_variable = { xp_gained = num_ships }
		navy_experience = xp_gained
	}
}

###### Air

EAI_MILITARY_track_fighter_losses = { # monthly # Doesn't work well due to produced fighters

	set_temp_variable = { EAI_previous_fighters_temp = EAI_previous_fighters }
	subtract_from_variable = { EAI_previous_fighters = num_fighters_deployed }
	set_variable = { EAI_monthly_fighters_lost_fraction = EAI_previous_fighters }

	if = { limit = { check_variable = { EAI_previous_fighters > 0 } }

		divide_variable = { EAI_monthly_fighters_lost_fraction = EAI_previous_fighters_temp }
	}
	else = {

		set_variable = { EAI_monthly_fighters_lost_fraction = 0 }
	}

	set_variable = { EAI_previous_fighters = num_fighters_deployed }
}

EAI_MILITARY_save_airforce_strategy = {

	if = { 
		limit = { 
			has_war = yes 
			has_capitulated = no
		}

		### Stop air missions when overwhelmed by enemy airforce

		if = { 
			limit = { 
				NOT = { has_country_flag = EAI_MILITARY_save_airforce_strategy }

				OR = {
					has_deployed_air_force_size = { size < 1000 type = fighter } 
					check_variable = { EAI_monthly_fighters_lost_fraction > 0.25 }
				}
			}

			EAI_calc_air_force_sizes =  yes

			### Factions are grouped into one value under the faction leader, unallied countries are separate 

			for_each_scope_loop = { array = enemy_air_force_sizes

				if = { 
					limit = { 

						# Compare ROOT + allies against the enemy faction airforce
						if = { limit = { is_faction_leader = yes }

							set_temp_variable = { air_difference = faction_air_force_size_@THIS }
							subtract_from_temp_variable = { air_difference = friendly_air_force_size }

							set_temp_variable = { air_ratio = friendly_air_force_size }
							clamp_temp_variable = { var = faction_air_force_size_@THIS min = 1 }
							divide_temp_variable = { air_ratio = faction_air_force_size_@THIS }
						}

						# Compare ROOT + allies against the enemy country airforce
						else = {

							set_temp_variable = { air_difference = air_force_size_@THIS }
							subtract_from_temp_variable = { air_difference = friendly_air_force_size }

							set_temp_variable = { air_ratio = friendly_air_force_size }
							clamp_temp_variable = { var = air_force_size_@THIS min = 1 }
							divide_temp_variable = { air_ratio = air_force_size_@THIS }
						}

						check_variable = { air_difference > 800 } # enemy has > 800 fighters
						check_variable = { air_ratio < 0.25 } # ratio to enemy < 0.25
					}

					ROOT = { 
						set_country_flag = EAI_MILITARY_save_airforce_strategy
						set_country_flag = { flag = EAI_MILITARY_save_airforce_strategy_min_duration value = 1 days = 60 }
						# clear_variable = EAI_no_surrender_progression_months

						if = { limit = { has_country_flag = EAI_military_strategy_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | AIR PRODUCTION: EAI_MILITARY_save_airforce_strategy" }
					}
				}
			}
		}

		### Resume

		else_if = { 
			limit = { 
				has_country_flag = EAI_MILITARY_save_airforce_strategy 
				NOT = { has_country_flag = EAI_MILITARY_save_airforce_strategy_min_duration }
			}

			### Has rebuilt its airforce

			if = { 
				limit = { 
					has_deployed_air_force_size = { size > 2000 type = fighter } 
				}

				clr_country_flag = EAI_MILITARY_save_airforce_strategy
				if = { limit = { has_country_flag = EAI_military_strategy_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | AIR PRODUCTION: discontinuing EAI_MILITARY_save_airforce_strategy" }
			}

			### Enemies weak

			else = {
				
				EAI_calc_air_force_sizes =  yes

				###

				for_each_scope_loop = { array = enemy_air_force_sizes

					# Compare ROOT + allies against the enemy faction airforce
					if = { limit = { is_faction_leader = yes }

						set_temp_variable = { air_difference = faction_air_force_size_@THIS }
						subtract_from_temp_variable = { air_difference = friendly_air_force_size }

						set_temp_variable = { air_ratio = friendly_air_force_size }
						clamp_temp_variable = { var = faction_air_force_size_@THIS min = 1 }
						divide_temp_variable = { air_ratio = faction_air_force_size_@THIS }
					}

					# Compare ROOT + allies against the enemy country airforce
					else = {

						set_temp_variable = { air_difference = air_force_size_@THIS }
						subtract_from_temp_variable = { air_difference = friendly_air_force_size }

						set_temp_variable = { air_ratio = friendly_air_force_size }
						clamp_temp_variable = { var = air_force_size_@THIS min = 1 }
						divide_temp_variable = { air_ratio = air_force_size_@THIS }
					}

					if = {
						limit = {
							OR = {
								check_variable = { air_difference > 400 }
								check_variable = { air_ratio < 0.30 }
							}
						}

						set_temp_variable = { break = 1 }
					}
				}

				if = { limit = { check_variable = { break = 0 } }

					clr_country_flag = EAI_MILITARY_save_airforce_strategy
					if = { limit = { has_country_flag = EAI_military_strategy_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | AIR PRODUCTION: discontinuing EAI_MILITARY_save_airforce_strategy" }
				}
			}
		}
	}

	else = { clr_country_flag = EAI_MILITARY_save_airforce_strategy }
}

###### Fronts

EAI_MILITARY_defensive_front_strategy = {

	if = { limit = { has_war = yes }

		### critically low on equipment

		if = { 
			limit = { 
				NOT = { has_country_flag = EAI_MILITARY_defensive_front_strategy_equipment }
				check_variable = { EAI_fielded_eq_ratio < 0.6 }
			}

			if = { limit = { NOT = { has_country_flag = EAI_MILITARY_defensive_front_strategy } }

				if = { limit = { has_country_flag = EAI_front_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | FRONT: stopping attacks due to low equipment" }
			}

			set_country_flag = EAI_MILITARY_defensive_front_strategy
			set_country_flag = EAI_MILITARY_defensive_front_strategy_equipment
		}
		else_if = {
			limit = {
				has_country_flag = EAI_MILITARY_defensive_front_strategy_equipment
				check_variable = { EAI_fielded_eq_ratio > 0.9 }
			}

			if = { limit = { has_country_flag = EAI_front_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | FRONT: CANCEL stopping attacks due to low equipment" }

			clr_country_flag = EAI_MILITARY_defensive_front_strategy
			clr_country_flag = EAI_MILITARY_defensive_front_strategy_equipment
		}

		### Out of manpower

		if = { 
			limit = {
				NOT = { has_country_flag = EAI_MILITARY_defensive_front_strategy_manpower }

				EAI_reserve_manpower_less_than_5p = yes
				
				OR = { # Can upgrade law or is currently conscripting
					EAI_LAW_upgrade_manpower_law = yes
					conscription_ratio < 1
				}
			}

			if = { limit = { NOT = { has_country_flag = EAI_MILITARY_defensive_front_strategy } }

				if = { limit = { has_country_flag = EAI_front_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | FRONT: stopping attacks due to low manpower" }
			}

			set_country_flag = EAI_MILITARY_defensive_front_strategy
			set_country_flag = EAI_MILITARY_defensive_front_strategy_manpower
		}
		else_if = {
			limit = {
				has_country_flag = EAI_MILITARY_defensive_front_strategy_manpower

				OR = { # Cancel if:
					EAI_reserve_manpower_more_than_10p = yes
					
					NOT = { # Cant upgrade law and not conscripting more
						EAI_LAW_upgrade_manpower_law = yes
						conscription_ratio < 1
					}
				}
			}

			if = { limit = { has_country_flag = EAI_front_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | FRONT: CANCEL stopping attacks due to low manpower" }

			clr_country_flag = EAI_MILITARY_defensive_front_strategy
			clr_country_flag = EAI_MILITARY_defensive_front_strategy_manpower
		}

		### weak vs countries

		every_enemy_country = {

			if = {
				limit = {
					ROOT = { 
						NOT = { is_in_array = { EAI_MILITARY_defensive_front_strategy_at = PREV.id } }

						alliance_strength_ratio < 0.5
						strength_ratio = { tag = PREV ratio < 0.25 }
					}
				}

				if = { limit = { has_country_flag = EAI_front_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | FRONT: stopping attacks vs [This.GetTag] (weak)" }

				ROOT = { add_to_array = { EAI_MILITARY_defensive_front_strategy_at = PREV.id } }
			}
			else_if = {
				limit = {
					ROOT = {
						is_in_array = { EAI_MILITARY_defensive_front_strategy_at = PREV.id }
					
						NOT = {
							alliance_strength_ratio < 0.5
							strength_ratio = { tag = PREV ratio < 0.25 }
						}
					}
				}

				if = { limit = { has_country_flag = EAI_front_logging } log = "[GetYear] [GetMonth] | AI | [Root.GetName] | FRONT: CANCEL stopping attacks vs [This.GetTag] (weak)" }

				ROOT = { remove_from_array = { EAI_MILITARY_defensive_front_strategy_at = PREV.id } }
			}
		}
	}
}

# Spaces out operational pause starts across countries so that every country doesn't pause on the same day
EAI_MILITARY_operational_pause_timer = { # Execute daily

    if = { 
        limit = { 
            has_war = yes

            NOT = { has_country_flag = EAI_MILITARY_operational_pause_timer_initialized }
        }

        random_list = {
            1 = { 
                set_country_flag = EAI_MILITARY_operational_pause_timer_initialized
            }
            60 = {}
        }
    }
    else_if = { 
        limit = { 
            has_war = no

            has_country_flag = EAI_MILITARY_operational_pause_timer_initialized
        }

        clr_country_flag = EAI_MILITARY_operational_pause_timer_initialized
    }

    if = { 
        limit = { 
            has_country_flag = EAI_MILITARY_operational_pause_timer_initialized

            NOT = { 
                has_country_flag = EAI_MILITARY_operational_pause_timer
                has_country_flag = EAI_operational_resume_timer
            }
        }

		@PAUSE_DURATION_BASE = 7
		@PAUSE_DURATION_MAX_ADDED = 7
        
        set_temp_variable = { pause_duration = @PAUSE_DURATION_MAX_ADDED }
        multiply_temp_variable = { pause_duration = random }
        add_to_temp_variable = { pause_duration = @PAUSE_DURATION_BASE }
        round_temp_variable = pause_duration

		@RESUME_DURATION_BASE = 60
		@RESUME_DURATION_ADDED = 40
        
        set_temp_variable = { resume_duration = @RESUME_DURATION_ADDED }
        multiply_temp_variable = { resume_duration = random }
        add_to_temp_variable = { resume_duration = @RESUME_DURATION_BASE }
        round_temp_variable = resume_duration 
        add_to_temp_variable = { resume_duration = pause_duration }

		@INITIAL_RESUME_DURATION_BASE = 7

		set_temp_variable = { initial_resume_duration = @INITIAL_RESUME_DURATION_BASE }
		add_to_temp_variable = { initial_resume_duration = pause_duration }

        meta_effect = {
            text = { 
                set_country_flag = { flag = EAI_MILITARY_operational_pause_timer value = 1 days = [x] }
                set_country_flag = { flag = EAI_operational_initial_resume_timer value = 1 days = [z] }
                set_country_flag = { flag = EAI_operational_resume_timer value = 1 days = [y] }
            }
            x = "[?pause_duration]"
            y = "[?resume_duration]"
            z = "[?initial_resume_duration]"
        }
        if = { limit = { has_country_flag = EAI_military_strategy_logging }  log = "[GetYear] [GetMonth] | AI | [Root.GetName] | EAI_MILITARY_operational_pause_timer [?pause_duration] [?resume_duration] [?initial_resume_duration]" }
    }
}

###

EAI_MILITARY_special_military_strategies = { # Weekly

	EAI_MILITARY_strategy_GER_offensive_vs_SOV_is_weak = yes

	EAI_MILITARY_strategy_SOV_offensive_vs_GER_is_weak = yes

	EAI_MILITARY_strategy_JAP_push_CHI_north = yes
}

### Barbarossa

EAI_MILITARY_strategy_GER_offensive_vs_SOV_is_weak = {

	if = {
		limit = {
			NOT = { has_country_flag = EAI_MILITARY_strategy_GER_offensive_vs_SOV_is_weak }
			NOT = { has_country_flag = EAI_MILITARY_strategy_GER_offensive_vs_SOV_is_weak_timeout }

			###

			has_war_with = SOV

			is_in_faction_with = GER

			check_variable = { EAI_fielded_eq_ratio > 0.7 }
			EAI_reserve_manpower_more_than_25p = yes

			SOV = {
				OR = {
					surrender_progress > 0.8
					strength_ratio = { tag = PREV ratio < 0.5 } 

					check_variable = { EAI_fielded_eq_ratio < 0.6 }
					EAI_reserve_manpower_less_than_5p = yes
				}
			}
		}

		set_country_flag = { flag = EAI_MILITARY_strategy_GER_offensive_vs_SOV_is_weak value = 1 days = 30 }
		set_country_flag = { flag = EAI_lift_airforce_restriction value = 1 days = 30 }

		set_country_flag = { flag = EAI_MILITARY_strategy_GER_offensive_vs_SOV_is_weak_timeout value = 1 days = 120 }
	}

	else_if = {
		limit = {
			has_country_flag = EAI_MILITARY_strategy_GER_offensive_vs_SOV_is_weak

			###

			NOT = {
				AND = {
					check_variable = { EAI_fielded_eq_ratio > 0.6 }

					SOV = {
						OR = {
							surrender_progress > 0.8
							strength_ratio = { tag = GER ratio < 0.5 } 

							check_variable = { EAI_fielded_eq_ratio < 0.6 }
							EAI_reserve_manpower_less_than_10p = yes
						}
					}
				}
			}
		}

		clr_country_flag = EAI_MILITARY_strategy_GER_offensive_vs_SOV_is_weak
		clr_country_flag = EAI_lift_airforce_restriction
	}
}

EAI_MILITARY_strategy_SOV_offensive_vs_GER_is_weak = {

	if = {
		limit = {
			NOT = { has_country_flag = EAI_MILITARY_strategy_SOV_offensive_vs_GER_is_weak }
			NOT = { has_country_flag = EAI_MILITARY_strategy_SOV_offensive_vs_GER_is_weak_timeout }

			###

			has_war_with = GER

			is_in_faction_with = SOV

			check_variable = { EAI_fielded_eq_ratio > 0.7 }

			GER = {
				OR = {
					surrender_progress > 0.8
					strength_ratio = { tag = SOV ratio < 0.5 } 

					check_variable = { EAI_fielded_eq_ratio < 0.6 }
					EAI_reserve_manpower_less_than_5p = yes
				}
			}
		}

		set_country_flag = { flag = EAI_MILITARY_strategy_SOV_offensive_vs_GER_is_weak value = 1 days = 30 }
		set_country_flag = { flag = EAI_lift_airforce_restriction value = 1 days = 30 }

		set_country_flag = { flag = EAI_MILITARY_strategy_SOV_offensive_vs_GER_is_weak_timeout value = 1 days = 120 }
	}

	else_if = {
		limit = {
			has_country_flag = EAI_MILITARY_strategy_SOV_offensive_vs_GER_is_weak

			###

			NOT = {
				AND = {
					check_variable = { EAI_fielded_eq_ratio > 0.6 }

					GER = {
						OR = {
							surrender_progress > 0.8
							strength_ratio = { tag = SOV ratio < 0.5 }

							check_variable = { EAI_fielded_eq_ratio < 0.6 }
							EAI_reserve_manpower_less_than_10p = yes 
						}
					}
				}
			}
		}

		clr_country_flag = EAI_MILITARY_strategy_SOV_offensive_vs_GER_is_weak
		clr_country_flag = EAI_lift_airforce_restriction
	}
}

### Japan vs China

EAI_MILITARY_strategy_JAP_push_CHI_north = {

	if = {
		limit = {
			tag = JAP
			has_war_with = CHI
		}

		if = { # There was an issue with JAP not launching any invasions, so make it push north as fallback
			limit = {
				NOT = {
					any_state = {
						is_coastal = yes
						OR = {
							region = 247
							region = 164
							region = 248
							state = 597
						}
						OR = {
							JAP = { divisions_in_state = { state = PREV size > 0 } }
							is_controlled_by = JAP
						}
					}
				}
			}

			add_to_variable = { EAI_MILITARY_strategy_JAP_push_CHI_north_days_since_invasion = 7 }
		}
		else = {
			set_variable = { EAI_MILITARY_strategy_JAP_push_CHI_north_days_since_invasion = 0 }
		}
	}
}