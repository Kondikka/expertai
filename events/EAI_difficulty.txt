add_namespace = EAI_H

############################################################################################################
# Expert AI mod - difficulty events
############################################################################################################

### Events that apply, update and remove various difficulty mode modifiers

### Difficulty bonus

country_event = { # static
	id = EAI_H.0
	hidden = yes
	mean_time_to_happen = { days = 2 }

	trigger = {

		has_variable = EAI_difficulty_bonus
	}

	immediate = {

		if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | DIFFICULTY BONUS: updating static" } 

		set_country_flag = EAI_difficulty_bonus_active

		if = { limit = { NOT = { has_dynamic_modifier = { modifier = EAI_difficulty_bonus_modifier } } } 
		
			add_dynamic_modifier = { modifier = EAI_difficulty_bonus_modifier } 
		}
		
		if = { limit = { check_variable = { EAI_custom_bonus_25 = 1 } NOT = { check_variable = { EAI_difficulty_equipment_bonus_active = 1 } } }

			EAI_apply_equipment_modifier_HARD = yes
		}
		else_if = { limit = { check_variable = { EAI_custom_bonus_25 = 2 } NOT = { check_variable = { EAI_difficulty_equipment_bonus_active = 2 } } }

			EAI_apply_equipment_modifier_VERY_HARD = yes
		}
		else_if = { limit = { check_variable = { EAI_custom_bonus_25 = 3 } NOT = { check_variable = { EAI_difficulty_equipment_bonus_active = 3 } } }

			EAI_apply_equipment_modifier_INSANE = yes
		}
	}

	option = {}
}

country_event = { # dynamic
	id = EAI_H.2
	hidden = yes
	mean_time_to_happen = { days = 2 }

	trigger = {

		is_ai = yes

		has_variable = global.EAI_dynamic_difficulty_bonus

		NOT = { 
			has_variable = EAI_difficulty_bonus 
			has_country_flag = EAI_disable_dynamic_difficulty_bonus 
		}
	}

	immediate = {

		if = { 
			limit = { 
				EAI_dynamic_bonus_trigger = yes 
			}

			if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | DIFFICULTY BONUS: updating dynamic" } 
		
			set_country_flag = EAI_dynamic_difficulty_bonus_active

			if = { limit = { NOT = { has_dynamic_modifier = { modifier = EAI_dynamic_difficulty_bonus_modifier } } } 

				add_dynamic_modifier = { modifier = EAI_dynamic_difficulty_bonus_modifier }
			}

			if = { limit = { check_variable = { global.EAI_custom_bonus_25 = 1 } NOT = { check_variable = { EAI_difficulty_equipment_bonus_active = 1 } } }

				EAI_apply_equipment_modifier_HARD = yes
			}
			else_if = { limit = { check_variable = { global.EAI_custom_bonus_25 = 2 } NOT = { check_variable = { EAI_difficulty_equipment_bonus_active = 2 } } }

				EAI_apply_equipment_modifier_VERY_HARD = yes
			}
			else_if = { limit = { check_variable = { global.EAI_custom_bonus_25 = 3 } NOT = { check_variable = { EAI_difficulty_equipment_bonus_active = 3 } } }

				EAI_apply_equipment_modifier_INSANE = yes
			}
		}
		else_if = { limit = { has_country_flag = EAI_dynamic_difficulty_bonus_active }

			if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | DIFFICULTY BONUS: removing dynamic" } 

			EAI_clear_active_difficulty_bonus = yes
		}
	}

	option = {}
}

### AI attrition reduction

country_event = {
	id = EAI_H.1020
	hidden = yes
	mean_time_to_happen = { days = 2 }
	trigger = {
		is_ai = yes

		NOT = {
			has_idea = EAI_attrition_reduction
			has_idea = EAI_attrition_reduction2
			has_idea = EAI_attrition_reduction3
		}

		OR = {
			has_global_flag = EAI_attrition_1
			has_global_flag = EAI_attrition_2
			has_global_flag = EAI_attrition_3
		}
	}
	immediate = {
		if = { limit = { has_global_flag = EAI_attrition_1 }
			add_ideas = EAI_attrition_reduction
		}
		if = { limit = { has_global_flag = EAI_attrition_2 }
			add_ideas = EAI_attrition_reduction2
		}
		if = { limit = { has_global_flag = EAI_attrition_3 }
			add_ideas = EAI_attrition_reduction3
		}

		if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | ATTRITION: adding idea" } 
	}
	option = {}
}

### Free AI convoys

country_event = {
	id = EAI_H.4
	hidden = yes
	mean_time_to_happen = { days = 2 }
	trigger = {
		OR = {
			check_variable = { EAI_custom_bonus_26 > 0 }

			AND = { check_variable = { global.EAI_custom_bonus_26 > 0 } EAI_dynamic_bonus_trigger = yes }

			has_global_flag = EAI_free_convoys
		}

		stockpile_ratio = { archetype = convoy ratio < 50 } # this trigger actually checks the number of free convoys in stockpile
	}
	immediate = {
		if = { limit = { check_variable = { EAI_custom_bonus_26 > 0 } }

			add_equipment_to_stockpile = { type = convoy_1 amount = EAI_custom_bonus_26 }

			if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | adding convoys (country) ([?EAI_custom_bonus_26])" } 
		}
		else_if = { limit = { check_variable = { global.EAI_custom_bonus_26 > 0 } EAI_dynamic_bonus_trigger = yes }

			add_equipment_to_stockpile = { type = convoy_1 amount = global.EAI_custom_bonus_26 }

			if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | adding convoys (dynamic) ([?global.EAI_custom_bonus_26])" } 
		}
		else = {
			add_equipment_to_stockpile = { type = convoy_1 amount = 50 }

			if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | adding convoys (global)" } 
		}
	}
	option = {}
}

### Desperate defense

country_event = { # static
	id = EAI_H.200
	hidden = yes
	mean_time_to_happen = { days = 2 }

	trigger = { 

		has_variable = EAI_desperate_defense
	}

	immediate = {

		if = { 
			limit = {
				has_capitulated = no
				surrender_progress > 0
			}

			if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | DD: updating static" }

			set_country_flag = EAI_desperate_defense_active

			### LOW

			if = { limit = { check_variable = { EAI_desperate_defense = 1 } } 

				set_temp_variable = { updated_desperate_defense_level = surrender_progress }
				divide_temp_variable = { updated_desperate_defense_level = 0.1 } # maxes out at 100%, ideas 1-10
				round_temp_variable = updated_desperate_defense_level
				clamp_temp_variable = { var = updated_desperate_defense_level min = 0 max = 10 }

				if = { limit = { NOT = { check_variable = { EAI_desperate_defense_level = updated_desperate_defense_level } } }

					set_variable = { EAI_desperate_defense_level = updated_desperate_defense_level }

					EAI_clear_equipment_modifier_DD = yes
					
					if = { limit = { check_variable = { updated_desperate_defense_level > 0 } }

						EAI_apply_equipment_modifier_DD = yes
					}
				}
			}

			### MED

			else_if = { limit = { check_variable = { EAI_desperate_defense = 2 } } 

				set_temp_variable = { updated_desperate_defense_level = surrender_progress }
				divide_temp_variable = { updated_desperate_defense_level = 0.025 } # maxes out at 50%, ideas 1-20
				round_temp_variable = updated_desperate_defense_level
				clamp_temp_variable = { var = updated_desperate_defense_level min = 0 max = 20 }

				if = { limit = { NOT = { check_variable = { EAI_desperate_defense_level = updated_desperate_defense_level } } }

					set_variable = { EAI_desperate_defense_level = updated_desperate_defense_level }

					EAI_clear_equipment_modifier_DD = yes
					
					if = { limit = { check_variable = { updated_desperate_defense_level > 0 } }

						EAI_apply_equipment_modifier_DD = yes
					}
				}
			}

			### HIGH

			else_if = { limit = { check_variable = { EAI_desperate_defense = 3 } } 

				set_temp_variable = { updated_desperate_defense_level = surrender_progress }
				divide_temp_variable = { updated_desperate_defense_level = 0.05 } # maxes out at 50%, ideas 11-20
				round_temp_variable = updated_desperate_defense_level
				clamp_temp_variable = { var = updated_desperate_defense_level min = 0 max = 10 }

				add_to_temp_variable = { updated_desperate_defense_level = 10 }

				if = { limit = { NOT = { check_variable = { EAI_desperate_defense_level = updated_desperate_defense_level } } }

					set_variable = { EAI_desperate_defense_level = updated_desperate_defense_level }

					EAI_clear_equipment_modifier_DD = yes
					
					if = { limit = { check_variable = { updated_desperate_defense_level > 10 } }

						EAI_apply_equipment_modifier_DD = yes
					}
				}
			}
		}
		else_if = { limit = { has_country_flag = EAI_desperate_defense_active }

			if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | DD: removing static" }

			EAI_clear_active_desperate_defense = yes
		}
	}
	
	option = {}
}

country_event = { # dynamic
	id = EAI_H.201
	hidden = yes
	mean_time_to_happen = { days = 2 }

	trigger = { 

		is_ai = yes

		has_variable = global.EAI_dynamic_desperate_defense

		NOT = { 
			has_variable = EAI_desperate_defense
			has_country_flag = EAI_disable_dynamic_desperate_defense
		}
	}

	immediate = {

		if = { 
			limit = {
				has_capitulated = no
				surrender_progress > 0
				EAI_dynamic_bonus_trigger = yes 
			}

			if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | DD: updating dynamic" }

			set_country_flag = EAI_dynamic_desperate_defense_active

			### LOW

			if = { limit = { check_variable = { global.EAI_dynamic_desperate_defense = 1 } } 

				set_temp_variable = { updated_desperate_defense_level = surrender_progress }
				divide_temp_variable = { updated_desperate_defense_level = 0.1 } # maxes out at 100%, ideas 1-10
				round_temp_variable = updated_desperate_defense_level
				clamp_temp_variable = { var = updated_desperate_defense_level min = 0 max = 10 }

				if = { limit = { NOT = { check_variable = { EAI_desperate_defense_level = updated_desperate_defense_level } } }

					set_variable = { EAI_desperate_defense_level = updated_desperate_defense_level }

					EAI_clear_equipment_modifier_DD = yes
					
					if = { limit = { check_variable = { updated_desperate_defense_level > 0 } }

						EAI_apply_equipment_modifier_DD = yes
					}
				}
			}

			### MED

			else_if = { limit = { check_variable = { global.EAI_dynamic_desperate_defense = 2 } } 

				set_temp_variable = { updated_desperate_defense_level = surrender_progress }
				divide_temp_variable = { updated_desperate_defense_level = 0.025 } # maxes out at 50%, ideas 1-20
				round_temp_variable = updated_desperate_defense_level
				clamp_temp_variable = { var = updated_desperate_defense_level min = 0 max = 20 }

				if = { limit = { NOT = { check_variable = { EAI_desperate_defense_level = updated_desperate_defense_level } } }

					set_variable = { EAI_desperate_defense_level = updated_desperate_defense_level }

					EAI_clear_equipment_modifier_DD = yes
					
					if = { limit = { check_variable = { updated_desperate_defense_level > 0 } }

						EAI_apply_equipment_modifier_DD = yes
					}
				}
			}

			### HIGH

			else_if = { limit = { check_variable = { global.EAI_dynamic_desperate_defense = 3 } } 

				set_temp_variable = { updated_desperate_defense_level = surrender_progress }
				divide_temp_variable = { updated_desperate_defense_level = 0.05 } # maxes out at 50%, ideas 11-20
				round_temp_variable = updated_desperate_defense_level
				clamp_temp_variable = { var = updated_desperate_defense_level min = 0 max = 10 }

				add_to_temp_variable = { updated_desperate_defense_level = 10 }

				if = { limit = { NOT = { check_variable = { EAI_desperate_defense_level = updated_desperate_defense_level } } }

					set_variable = { EAI_desperate_defense_level = updated_desperate_defense_level }

					EAI_clear_equipment_modifier_DD = yes
					
					if = { limit = { check_variable = { updated_desperate_defense_level > 10 } }

						EAI_apply_equipment_modifier_DD = yes
					}
				}
			}
		}
		else_if = { limit = { has_country_flag = EAI_dynamic_desperate_defense_active }

			if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | DD: removing dynamic" }
		
			EAI_clear_active_desperate_defense = yes
		}
	}
	
	option = {}
}

### Reinforcements

country_event = {
	id = EAI_H.300
	hidden = yes
	mean_time_to_happen = { days = 2 }

	trigger = {
		has_capitulated = no

		OR = { has_country_flag = EAI_reinforcements_mode AND = { has_global_flag = EAI_dynamic_reinforcements_mode NOT = { has_country_flag = EAI_disable_dynamic_reinforcements_mode } any_enemy_country = { is_ai = no } } }

		surrender_progress > 0
	}

	immediate = {
		# EQUIPMENT

		#####################################################################################################
		if = {
			limit = { has_equipment = { infantry_equipment < 250 } }

			add_equipment_to_stockpile = { type = infantry_equipment amount = 5000 }
		}

		if = {
			limit = { has_tech = tech_support has_equipment = { support_equipment < 250 } }

			add_equipment_to_stockpile = { type = support_equipment amount = 1000 }
		}

		if = {
			limit = { has_tech = gw_artillery has_equipment = { artillery_equipment < 250 } }

			add_equipment_to_stockpile = { type = artillery_equipment amount = 1000 }
		}

		#####################################################################################################
		if = {
			limit = { has_tech = motorised_infantry has_equipment = { motorized_equipment < 250 } }

			add_equipment_to_stockpile = { type = motorized_equipment amount = 1000 }
		}

		if = {
			limit = { has_tech = mechanised_infantry has_equipment = { mechanized_equipment < 250 } }

			add_equipment_to_stockpile = { type = mechanized_equipment amount = 250 }
		}
		
		#####################################################################################################
		if = {
			limit = {
				OR = { has_tech = basic_light_tank has_tech = improved_light_tank has_tech = advanced_light_tank }
				has_equipment = { light_tank_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = light_tank_equipment amount = 250 }
		}
		if = {
			limit = {
				OR = { has_tech = basic_light_td has_tech = improved_light_td has_tech = advanced_light_td }
				has_equipment = { light_tank_destroyer_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = light_tank_destroyer_equipment amount = 250 }
		}
		if = {
			limit = {
				OR = { has_tech = basic_light_art has_tech = improved_light_art has_tech = advanced_light_art }
				has_equipment = { light_tank_artillery_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = light_tank_artillery_equipment amount = 250 }
		}
		if = {
			limit = {
				OR = { has_tech = basic_light_spaa has_tech = improved_light_spaa has_tech = advanced_light_spaa }
				has_equipment = { light_tank_aa_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = light_tank_aa_equipment amount = 250 }
		}

		#####################################################################################################
		if = {
			limit = {
				OR = { has_tech = basic_medium_tank has_tech = improved_medium_tank has_tech = advanced_medium_tank }
				has_equipment = { medium_tank_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = medium_tank_equipment amount = 250 }
		}
		if = {
			limit = {
				OR = { has_tech = basic_medium_td has_tech = improved_medium_td has_tech = advanced_medium_td }
				has_equipment = { medium_tank_destroyer_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = medium_tank_destroyer_equipment amount = 250 }
		}
		if = {
			limit = {
				OR = { has_tech = basic_medium_art has_tech = improved_medium_art has_tech = advanced_medium_art }
				has_equipment = { medium_tank_artillery_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = medium_tank_artillery_equipment amount = 250 }
		}
		if = {
			limit = {
				OR = { has_tech = basic_medium_spaa has_tech = improved_medium_spaa has_tech = advanced_medium_spaa }
				has_equipment = { medium_tank_aa_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = medium_tank_aa_equipment amount = 250 }
		}

		#####################################################################################################
		if = {
			limit = {
				OR = { has_tech = basic_heavy_tank has_tech = improved_heavy_tank has_tech = advanced_heavy_tank }
				has_equipment = { heavy_tank_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = heavy_tank_equipment amount = 250 }
		}
		if = {
			limit = {
				OR = { has_tech = basic_heavy_td has_tech = improved_heavy_td has_tech = advanced_heavy_td }
				has_equipment = { heavy_tank_destroyer_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = heavy_tank_destroyer_equipment amount = 250 }
		}
		if = {
			limit = {
				OR = { has_tech = basic_heavy_art has_tech = improved_heavy_art has_tech = advanced_heavy_art }
				has_equipment = { heavy_tank_artillery_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = heavy_tank_artillery_equipment amount = 250 }
		}
		if = {
			limit = {
				OR = { has_tech = basic_heavy_spaa has_tech = improved_heavy_spaa has_tech = advanced_heavy_spaa }
				has_equipment = { heavy_tank_aa_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = heavy_tank_aa_equipment amount = 250 }
		}

		#####################################################################################################
		if = {
			limit = {
				has_tech = main_battle_tank
				has_equipment = { modern_tank_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = modern_tank_equipment amount = 250 }
		}
		if = {
			limit = {
				has_tech = modern_td
				has_equipment = { modern_tank_destroyer_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = modern_tank_destroyer_equipment amount = 250 }
		}
		if = {
			limit = {
				has_tech = modern_art
				has_equipment = { modern_tank_artillery_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = modern_tank_artillery_equipment amount = 250 }
		}
		if = {
			limit = {
				has_tech = modern_spaa
				has_equipment = { modern_tank_aa_equipment < 250 }
			}

			add_equipment_to_stockpile = { type = modern_tank_aa_equipment amount = 250 }
		}

		#####################################################################################################

		# UNITS

		if = { limit = { NOT = { has_country_flag = EAI_infantry_division_limit } }

			EAI_dd_get_templates = yes

			if = {
				limit = {
					any_owned_state = {
						is_fully_controlled_by = ROOT

						is_in_home_area = yes

						any_neighbor_state = {
							is_controlled_by = ROOT

							any_neighbor_state = {
								OR = {
									CONTROLLER = { has_war_with = ROOT }
									AND = { is_controlled_by = ROOT NOT = { is_fully_controlled_by = ROOT } }
								}
							}
						}

						NOT = {
							any_neighbor_state = {
								OR = {
									CONTROLLER = { has_war_with = ROOT }
									AND = { is_controlled_by = ROOT NOT = { is_fully_controlled_by = ROOT } }
								}
							}
						}
					}
				}
				random_owned_state = {
					limit = {
						is_fully_controlled_by = ROOT

						is_in_home_area = yes

						any_neighbor_state = {
							is_controlled_by = ROOT

							any_neighbor_state = {
								OR = {
									CONTROLLER = { has_war_with = ROOT }
									AND = { is_controlled_by = ROOT NOT = { is_fully_controlled_by = ROOT } }
								}
							}
						}

						NOT = {
							any_neighbor_state = {
								OR = {
									CONTROLLER = { has_war_with = ROOT }
									AND = { is_controlled_by = ROOT NOT = { is_fully_controlled_by = ROOT } }
								}
							}
						}
					}

					if = { limit = { ROOT = { has_country_flag = EAI_difficulty_logging } } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | REINFORCEMENTS: spawning units (prio 1)" } 

					random_list = {
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					any_owned_state = {
						is_fully_controlled_by = ROOT

						is_in_home_area = yes

						NOT = {
							any_neighbor_state = {
								OR = {
									CONTROLLER = { has_war_with = ROOT }
									AND = { is_controlled_by = ROOT NOT = { is_fully_controlled_by = ROOT } }
								}
							}
						}
					}
				}

				if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | REINFORCEMENTS: spawning units (prio 2)" } 
				
				random_owned_state = {
					limit = {
						is_fully_controlled_by = ROOT

						is_in_home_area = yes

						NOT = {
							any_neighbor_state = {
								OR = {
									CONTROLLER = { has_war_with = ROOT }
									AND = { is_controlled_by = ROOT NOT = { is_fully_controlled_by = ROOT } }
								}
							}
						}
					}

					random_list = {
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					any_owned_state = {
						is_fully_controlled_by = ROOT

						is_in_home_area = yes
					}
				}

				if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | REINFORCEMENTS: spawning units (prio 3)" } 
				
				random_owned_state = {
					limit = {
						is_fully_controlled_by = ROOT

						is_in_home_area = yes
					}

					random_list = {
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					any_owned_state = {
						is_fully_controlled_by = ROOT

						NOT = {
							any_neighbor_state = {
								OR = {
									CONTROLLER = { has_war_with = ROOT }
									AND = { is_controlled_by = ROOT NOT = { is_fully_controlled_by = ROOT } }
								}
							}
						}
					}
				}

				if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | REINFORCEMENTS: spawning units (prio 4)" } 

				random_owned_state = {
					limit = {
						is_fully_controlled_by = ROOT

						NOT = {
							any_neighbor_state = {
								OR = {
									CONTROLLER = { has_war_with = ROOT }
									AND = { is_controlled_by = ROOT NOT = { is_fully_controlled_by = ROOT } }
								}
							}
						}
					}

					random_list = {
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
					}
				}
			}
			else_if = {
				limit = {}

				if = { limit = { has_country_flag = EAI_difficulty_logging } log = "[GetYear] [GetMonth] | DIFFICULTY | [Root.GetName] | REINFORCEMENTS: spawning units (prio 5)" } 

				random_owned_state = {
					limit = {
						ROOT = { has_full_control_of_state = PREV }
					}

					random_list = {
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
						1 = {
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
							EAI_dd_spawn_unit = yes
						}
					}
				}
			}
		}
	}

	option = {}
}